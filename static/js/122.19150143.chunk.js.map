{"version":3,"file":"static/js/122.19150143.chunk.js","mappings":"+PAsCA,MAlCA,WACE,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,MAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAYA,OAVAC,EAAAA,EAAAA,YAAU,YACR,iBAAC,gHAE6BC,EAAAA,EAAAA,IAAgBN,GAF7C,gBAEWO,EAFX,EAEWA,QACRH,EAAWG,GAHd,gDAKGC,MAAM,KAAMC,SALf,wDAAD,EAQD,GAAE,CAACT,KAEF,8BACGG,GAAWA,EAAQO,OAAS,GAC3B,wBACGP,EAAQQ,KAAI,YAA8B,IAA3BC,EAA0B,EAA1BA,OAAQC,EAAkB,EAAlBA,QAASC,EAAS,EAATA,GAC/B,OACE,2BACE,oCAAYF,MACZ,uBAAIC,MAFGC,EAKZ,OAGH,sEAIP,C,+LClCDC,EAAAA,EAAAA,SAAAA,QAAyB,+BACzBA,EAAAA,EAAAA,SAAAA,OAAwB,CACtBC,QAAS,oCAGJ,IAAMC,EAAgB,mCAAG,2GAAOC,EAAP,+BAAc,EAAd,kBAELH,EAAAA,EAAAA,IAAU,sBAAuB,CACtDI,OAAQ,CACND,KAAAA,KAJwB,uBAEpBE,EAFoB,EAEpBA,KAFoB,kBAOrBA,GAPqB,oGAAH,qDAahBC,EAAgB,mCAAG,WAAOC,GAAP,8FAAcJ,EAAd,+BAAqB,EAArB,kBAELH,EAAAA,EAAAA,IAAU,gBAAiB,CAChDI,OAAQ,CACNG,MAAAA,EACAJ,KAAAA,KALwB,uBAEpBE,EAFoB,EAEpBA,KAFoB,kBAQrBA,GARqB,oGAAH,sDAchBG,EAAY,mCAAG,WAAMvB,GAAN,kGAEDe,EAAAA,EAAAA,IAAA,iBAAoBf,IAFnB,uBAEhBoB,EAFgB,EAEhBA,KAFgB,kBAGjBA,GAHiB,oGAAH,sDASZI,EAAe,mCAAG,WAAMxB,GAAN,kGAEJe,EAAAA,EAAAA,IAAA,iBAAoBf,EAApB,aAFI,uBAEnBoB,EAFmB,EAEnBA,KAFmB,kBAGpBA,GAHoB,oGAAH,sDASfd,EAAe,mCAAG,WAAMN,GAAN,kGAEJe,EAAAA,EAAAA,IAAA,iBAAoBf,EAApB,aAFI,uBAEnBoB,EAFmB,EAEnBA,KAFmB,kBAGpBA,GAHoB,oGAAH,qD","sources":["components/Reviews/Reviews.jsx","utils/themoviedbAPI.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieReviews } from 'utils/themoviedbAPI';\n\nfunction Reviews() {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState(null);\n\n  useEffect(() => {\n    (async () => {\n      try {\n        const { results } = await getMovieReviews(movieId);\n        setReviews(results);\n      } catch (error) {\n        alert(error.message);\n      }\n    })();\n  }, [movieId]);\n  return (\n    <>\n      {reviews && reviews.length > 0 ? (\n        <ul>\n          {reviews.map(({ author, content, id }) => {\n            return (\n              <li key={id}>\n                <p>Author: {author}</p>\n                <p>{content}</p>\n              </li>\n            );\n          })}\n        </ul>\n      ) : (\n        <p>We don't have any reviews for this movie.</p>\n      )}\n    </>\n  );\n}\n\nexport default Reviews;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.params = {\n  api_key: '663bd5fd8d905b7ce2d57e9867d3492e',\n};\n\nexport const getPopularMovies = async (page = 1) => {\n  try {\n    const { data } = await axios.get('/trending/movie/day', {\n      params: {\n        page,\n      },\n    });\n    return data;\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const getMoviesByQuery = async (query, page = 1) => {\n  try {\n    const { data } = await axios.get('/search/movie', {\n      params: {\n        query,\n        page,\n      },\n    });\n    return data;\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const getMovieById = async movieId => {\n  try {\n    const { data } = await axios.get(`/movie/${movieId}`);\n    return data;\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const getMovieCredits = async movieId => {\n  try {\n    const { data } = await axios.get(`/movie/${movieId}/credits`);\n    return data;\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const getMovieReviews = async movieId => {\n  try {\n    const { data } = await axios.get(`/movie/${movieId}/reviews`);\n    return data;\n  } catch (error) {\n    throw error;\n  }\n};\n"],"names":["movieId","useParams","useState","reviews","setReviews","useEffect","getMovieReviews","results","alert","message","length","map","author","content","id","axios","api_key","getPopularMovies","page","params","data","getMoviesByQuery","query","getMovieById","getMovieCredits"],"sourceRoot":""}