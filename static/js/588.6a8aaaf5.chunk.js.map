{"version":3,"file":"static/js/588.6a8aaaf5.chunk.js","mappings":"uQA6DA,MAzDA,WAAyB,IAAD,IACdA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA0BE,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACMC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,QAAM,oBAACH,EAASI,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,WAE1CC,EAAU,gDAAqCR,QAArC,IAAqCA,OAArC,EAAqCA,EAAOS,aACtDC,EAAM,OAAGV,QAAH,IAAGA,OAAH,EAAGA,EAAOU,OAAOC,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAAgBC,KAAK,KACrDC,EAAYC,KAAKC,MAA4B,IAAjB,OAALjB,QAAK,IAALA,OAAA,EAAAA,EAAOkB,eAC9BC,EACJ,IAAIC,KAAKA,KAAKC,MAAL,OAAWrB,QAAX,IAAWA,OAAX,EAAWA,EAAOsB,eAAeC,eAAiB,GAa7D,OAXAC,EAAAA,EAAAA,YAAU,YACR,iBAAC,8GAEsBC,EAAAA,EAAAA,IAAa5B,GAFnC,OAES6B,EAFT,OAGGzB,EAASyB,GAHZ,gDAKGC,MAAM,KAAMC,SALf,wDAAD,EAQD,GAAE,CAAC/B,KAGF,iCACE,SAAC,KAAD,CAAMgC,GAAIzB,EAAS0B,QAAnB,qBACC9B,IACC,4BACE,gBAAK+B,IAAKvB,EAAYwB,IAAKhC,EAAMiC,MAAOC,OAAO,SAC/C,4BACE,0BACGlC,EAAMiC,MADT,KACkBd,EADlB,QAGA,wCAAgBJ,EAAhB,QACA,qCACA,uBAAIf,EAAMmC,YACV,mCACA,uBAAIzB,WAIV,mDACA,2BACE,yBACE,SAAC,KAAD,CAAMmB,GAAG,OAAT,qBAEF,yBACE,SAAC,KAAD,CAAMA,GAAG,UAAT,2BAGJ,SAAC,EAAAO,SAAD,WACE,SAAC,KAAD,QAIP,C,+LCzDDC,EAAAA,EAAAA,SAAAA,QAAyB,+BACzBA,EAAAA,EAAAA,SAAAA,OAAwB,CACtBC,QAAS,oCAGJ,IAAMC,EAAgB,mCAAG,2GAAOC,EAAP,+BAAc,EAAd,kBAELH,EAAAA,EAAAA,IAAU,sBAAuB,CACtDI,OAAQ,CACND,KAAAA,KAJwB,uBAEpBd,EAFoB,EAEpBA,KAFoB,kBAOrBA,GAPqB,oGAAH,qDAahBgB,EAAgB,mCAAG,WAAOC,GAAP,8FAAcH,EAAd,+BAAqB,EAArB,kBAELH,EAAAA,EAAAA,IAAU,gBAAiB,CAChDI,OAAQ,CACNE,MAAAA,EACAH,KAAAA,KALwB,uBAEpBd,EAFoB,EAEpBA,KAFoB,kBAQrBA,GARqB,oGAAH,sDAchBD,EAAY,mCAAG,WAAM5B,GAAN,kGAEDwC,EAAAA,EAAAA,IAAA,iBAAoBxC,IAFnB,uBAEhB6B,EAFgB,EAEhBA,KAFgB,kBAGjBA,GAHiB,oGAAH,sDASZkB,EAAe,mCAAG,WAAM/C,GAAN,kGAEJwC,EAAAA,EAAAA,IAAA,iBAAoBxC,EAApB,aAFI,uBAEnB6B,EAFmB,EAEnBA,KAFmB,kBAGpBA,GAHoB,oGAAH,sDASfmB,EAAe,mCAAG,WAAMhD,GAAN,kGAEJwC,EAAAA,EAAAA,IAAA,iBAAoBxC,EAApB,aAFI,uBAEnB6B,EAFmB,EAEnBA,KAFmB,kBAGpBA,GAHoB,oGAAH,qD","sources":["pages/MovieDetails/MovieDetails.jsx","utils/themoviedbAPI.js"],"sourcesContent":["import { useEffect, useState, useRef, Suspense } from 'react';\nimport { Link, Outlet, useLocation, useParams } from 'react-router-dom';\nimport { getMovieById } from 'utils/themoviedbAPI';\n\nfunction MovieDetails() {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState(null);\n  const location = useLocation();\n  const backLink = useRef(location.state?.from ?? '/movies');\n\n  const posterPath = `https://image.tmdb.org/t/p/w300${movie?.poster_path}`;\n  const genres = movie?.genres.map(genre => genre.name).join(' ');\n  const userScore = Math.round(movie?.vote_average * 10);\n  const releaseYear =\n    new Date(Date.parse(movie?.release_date)).getFullYear() || '';\n\n  useEffect(() => {\n    (async () => {\n      try {\n        const data = await getMovieById(movieId);\n        setMovie(data);\n      } catch (error) {\n        alert(error.message);\n      }\n    })();\n  }, [movieId]);\n\n  return (\n    <>\n      <Link to={backLink.current}>Go back</Link>\n      {movie && (\n        <div>\n          <img src={posterPath} alt={movie.title} height=\"300\" />\n          <div>\n            <h3>\n              {movie.title} ({releaseYear})\n            </h3>\n            <p>User Score: {userScore}%</p>\n            <p>Overview</p>\n            <p>{movie.overview}</p>\n            <p>Genges</p>\n            <p>{genres}</p>\n          </div>\n        </div>\n      )}\n      <p>Additional information</p>\n      <ul>\n        <li>\n          <Link to=\"cast\">Cast</Link>\n        </li>\n        <li>\n          <Link to=\"reviews\">Reviews</Link>\n        </li>\n      </ul>\n      <Suspense>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n}\n\nexport default MovieDetails;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.params = {\n  api_key: '663bd5fd8d905b7ce2d57e9867d3492e',\n};\n\nexport const getPopularMovies = async (page = 1) => {\n  try {\n    const { data } = await axios.get('/trending/movie/day', {\n      params: {\n        page,\n      },\n    });\n    return data;\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const getMoviesByQuery = async (query, page = 1) => {\n  try {\n    const { data } = await axios.get('/search/movie', {\n      params: {\n        query,\n        page,\n      },\n    });\n    return data;\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const getMovieById = async movieId => {\n  try {\n    const { data } = await axios.get(`/movie/${movieId}`);\n    return data;\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const getMovieCredits = async movieId => {\n  try {\n    const { data } = await axios.get(`/movie/${movieId}/credits`);\n    return data;\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const getMovieReviews = async movieId => {\n  try {\n    const { data } = await axios.get(`/movie/${movieId}/reviews`);\n    return data;\n  } catch (error) {\n    throw error;\n  }\n};\n"],"names":["movieId","useParams","useState","movie","setMovie","location","useLocation","backLink","useRef","state","from","posterPath","poster_path","genres","map","genre","name","join","userScore","Math","round","vote_average","releaseYear","Date","parse","release_date","getFullYear","useEffect","getMovieById","data","alert","message","to","current","src","alt","title","height","overview","Suspense","axios","api_key","getPopularMovies","page","params","getMoviesByQuery","query","getMovieCredits","getMovieReviews"],"sourceRoot":""}