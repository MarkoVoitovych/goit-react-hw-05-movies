{"version":3,"file":"static/js/184.446371cb.chunk.js","mappings":"uQAuDA,MAnDA,WACE,OAAsCA,EAAAA,EAAAA,IAAgB,CAAEC,MAAO,KAA/D,eAAOC,EAAP,KAAoBC,EAApB,KACMF,EAAQC,EAAYE,IAAI,SAC9B,GAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACMC,GAAWC,EAAAA,EAAAA,MAwBjB,OAtBAC,EAAAA,EAAAA,YAAU,WACM,KAAVT,IACJ,iBAAC,gHAE6BU,EAAAA,EAAAA,IAAiBV,GAF9C,gBAEWW,EAFX,EAEWA,QACRL,EAAUK,GAHb,gDAKGC,MAAM,KAAMC,SALf,wDAAD,EAQD,GAAE,CAACb,KAaF,iCACE,kBAAMc,SAZgB,SAAAC,GACxBA,EAAEC,iBACF,IAAMf,EAAcc,EAAEE,OAAOC,SAASlB,MAAMmB,MAAMC,OAC9B,KAAhBnB,GAIJC,EAAe,CAAEF,MAAOC,IACxBc,EAAEE,OAAOI,SAJPN,EAAEE,OAAOI,OAKZ,EAGG,WACE,kBAAOC,KAAK,OAAOC,KAAK,QAAQC,WAAS,KACzC,mBAAQF,KAAK,SAAb,uBAEDtB,IACC,wBACGK,EAAOoB,KAAI,SAAAC,GACV,OACE,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaD,EAAME,IAAMC,MAAO,CAAEC,KAAMvB,GAAhD,SACGmB,EAAMK,SAFFL,EAAME,GAMlB,QAKV,C,+LCnDDI,EAAAA,EAAAA,SAAAA,QAAyB,+BACzBA,EAAAA,EAAAA,SAAAA,OAAwB,CACtBC,QAAS,oCAGJ,IAAMC,EAAgB,mCAAG,2GAAOC,EAAP,+BAAc,EAAd,kBAELH,EAAAA,EAAAA,IAAU,sBAAuB,CACtDI,OAAQ,CACND,KAAAA,KAJwB,uBAEpBE,EAFoB,EAEpBA,KAFoB,kBAOrBA,GAPqB,oGAAH,qDAahB3B,EAAgB,mCAAG,WAAOV,GAAP,8FAAcmC,EAAd,+BAAqB,EAArB,kBAELH,EAAAA,EAAAA,IAAU,gBAAiB,CAChDI,OAAQ,CACNpC,MAAAA,EACAmC,KAAAA,KALwB,uBAEpBE,EAFoB,EAEpBA,KAFoB,kBAQrBA,GARqB,oGAAH,sDAchBC,EAAY,mCAAG,WAAMC,GAAN,kGAEDP,EAAAA,EAAAA,IAAA,iBAAoBO,IAFnB,uBAEhBF,EAFgB,EAEhBA,KAFgB,kBAGjBA,GAHiB,oGAAH,sDASZG,EAAe,mCAAG,WAAMD,GAAN,kGAEJP,EAAAA,EAAAA,IAAA,iBAAoBO,EAApB,aAFI,uBAEnBF,EAFmB,EAEnBA,KAFmB,kBAGpBA,GAHoB,oGAAH,sDASfI,EAAe,mCAAG,WAAMF,GAAN,kGAEJP,EAAAA,EAAAA,IAAA,iBAAoBO,EAApB,aAFI,uBAEnBF,EAFmB,EAEnBA,KAFmB,kBAGpBA,GAHoB,oGAAH,qD","sources":["pages/Movies/Movies.jsx","utils/themoviedbAPI.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\nimport { getMoviesByQuery } from 'utils/themoviedbAPI';\n\nfunction Movies() {\n  const [searchQuery, setSearchQuery] = useSearchParams({ query: '' });\n  const query = searchQuery.get('query');\n  const [movies, setMovies] = useState([]);\n  const location = useLocation();\n\n  useEffect(() => {\n    if (query === '') return;\n    (async () => {\n      try {\n        const { results } = await getMoviesByQuery(query);\n        setMovies(results);\n      } catch (error) {\n        alert(error.message);\n      }\n    })();\n  }, [query]);\n\n  const handleQuerySubmit = e => {\n    e.preventDefault();\n    const searchQuery = e.target.elements.query.value.trim();\n    if (searchQuery === '') {\n      e.target.reset();\n      return;\n    }\n    setSearchQuery({ query: searchQuery });\n    e.target.reset();\n  };\n  return (\n    <>\n      <form onSubmit={handleQuerySubmit}>\n        <input type=\"text\" name=\"query\" autoFocus />\n        <button type=\"submit\">Search</button>\n      </form>\n      {query && (\n        <ul>\n          {movies.map(movie => {\n            return (\n              <li key={movie.id}>\n                <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n                  {movie.title}\n                </Link>\n              </li>\n            );\n          })}\n        </ul>\n      )}\n    </>\n  );\n}\n\nexport default Movies;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.params = {\n  api_key: '663bd5fd8d905b7ce2d57e9867d3492e',\n};\n\nexport const getPopularMovies = async (page = 1) => {\n  try {\n    const { data } = await axios.get('/trending/movie/day', {\n      params: {\n        page,\n      },\n    });\n    return data;\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const getMoviesByQuery = async (query, page = 1) => {\n  try {\n    const { data } = await axios.get('/search/movie', {\n      params: {\n        query,\n        page,\n      },\n    });\n    return data;\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const getMovieById = async movieId => {\n  try {\n    const { data } = await axios.get(`/movie/${movieId}`);\n    return data;\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const getMovieCredits = async movieId => {\n  try {\n    const { data } = await axios.get(`/movie/${movieId}/credits`);\n    return data;\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const getMovieReviews = async movieId => {\n  try {\n    const { data } = await axios.get(`/movie/${movieId}/reviews`);\n    return data;\n  } catch (error) {\n    throw error;\n  }\n};\n"],"names":["useSearchParams","query","searchQuery","setSearchQuery","get","useState","movies","setMovies","location","useLocation","useEffect","getMoviesByQuery","results","alert","message","onSubmit","e","preventDefault","target","elements","value","trim","reset","type","name","autoFocus","map","movie","to","id","state","from","title","axios","api_key","getPopularMovies","page","params","data","getMovieById","movieId","getMovieCredits","getMovieReviews"],"sourceRoot":""}