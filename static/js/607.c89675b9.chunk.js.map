{"version":3,"file":"static/js/607.c89675b9.chunk.js","mappings":"gSAEaA,EAAOC,EAAAA,GAAAA,GAAH,8HAQJC,EAAOD,EAAAA,GAAAA,GAAH,kFAMJE,EAAOF,EAAAA,GAAAA,EAAH,4C,SC2BjB,MArCA,WACE,IAAQG,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,MAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAYA,OAVAC,EAAAA,EAAAA,YAAU,YACR,iBAAC,gHAE6BC,EAAAA,EAAAA,IAAgBN,GAF7C,gBAEWO,EAFX,EAEWA,QACRH,EAAWG,GAHd,gDAKGC,MAAM,KAAMC,SALf,wDAAD,EAQD,GAAE,CAACT,KAEF,8BACGG,GAAWA,EAAQO,OAAS,GAC3B,SAACd,EAAD,UACGO,EAAQQ,KAAI,YAA8B,IAA3BC,EAA0B,EAA1BA,OAAQC,EAAkB,EAAlBA,QAASC,EAAS,EAATA,GAC/B,OACE,UAAChB,EAAD,YACE,UAACC,EAAD,YACE,SAAC,MAAD,IADF,WAEWa,MAEX,SAACb,EAAD,UAAOc,MALEC,EAQd,OAGH,SAACf,EAAD,yDAIP,C,mMCvCDgB,EAAAA,EAAAA,SAAAA,QAAyB,+BACzBA,EAAAA,EAAAA,SAAAA,OAAwB,CACtBC,QAASC,oCAGJ,IAAMC,EAAgB,mCAAG,2GAAOC,EAAP,+BAAc,EAAd,kBAELJ,EAAAA,EAAAA,IAAU,sBAAuB,CACtDK,OAAQ,CACND,KAAAA,KAJwB,uBAEpBE,EAFoB,EAEpBA,KAFoB,kBAOrBA,GAPqB,oGAAH,qDAahBC,EAAgB,mCAAG,WAAOC,GAAP,8FAAcJ,EAAd,+BAAqB,EAArB,kBAELJ,EAAAA,EAAAA,IAAU,gBAAiB,CAChDK,OAAQ,CACNG,MAAAA,EACAJ,KAAAA,KALwB,uBAEpBE,EAFoB,EAEpBA,KAFoB,kBAQrBA,GARqB,oGAAH,sDAchBG,EAAY,mCAAG,WAAMxB,GAAN,kGAEDe,EAAAA,EAAAA,IAAA,iBAAoBf,IAFnB,uBAEhBqB,EAFgB,EAEhBA,KAFgB,kBAGjBA,GAHiB,oGAAH,sDASZI,EAAe,mCAAG,WAAMzB,GAAN,kGAEJe,EAAAA,EAAAA,IAAA,iBAAoBf,EAApB,aAFI,uBAEnBqB,EAFmB,EAEnBA,KAFmB,kBAGpBA,GAHoB,oGAAH,sDASff,EAAe,mCAAG,WAAMN,GAAN,kGAEJe,EAAAA,EAAAA,IAAA,iBAAoBf,EAApB,aAFI,uBAEnBqB,EAFmB,EAEnBA,KAFmB,kBAGpBA,GAHoB,oGAAH,qD","sources":["components/Reviews/Reviews.styled.js","components/Reviews/Reviews.jsx","utils/themoviedbAPI.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const List = styled.ul`\n  margin-top: 15px;\n  margin-left: 15px;\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n`;\n\nexport const Item = styled.li`\n  display: flex;\n  flex-direction: column;\n  gap: 5px;\n`;\n\nexport const Text = styled.p`\n  font-size: 14px;\n`;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { RxDotFilled } from 'react-icons/rx';\nimport { getMovieReviews } from 'utils/themoviedbAPI';\nimport { Item, List, Text } from './Reviews.styled';\n\nfunction Reviews() {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState(null);\n\n  useEffect(() => {\n    (async () => {\n      try {\n        const { results } = await getMovieReviews(movieId);\n        setReviews(results);\n      } catch (error) {\n        alert(error.message);\n      }\n    })();\n  }, [movieId]);\n  return (\n    <>\n      {reviews && reviews.length > 0 ? (\n        <List>\n          {reviews.map(({ author, content, id }) => {\n            return (\n              <Item key={id}>\n                <Text>\n                  <RxDotFilled />\n                  Author: {author}\n                </Text>\n                <Text>{content}</Text>\n              </Item>\n            );\n          })}\n        </List>\n      ) : (\n        <Text>We don't have any reviews for this movie.</Text>\n      )}\n    </>\n  );\n}\n\nexport default Reviews;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.params = {\n  api_key: process.env.REACT_APP_MOVIE_API_KEY,\n};\n\nexport const getPopularMovies = async (page = 1) => {\n  try {\n    const { data } = await axios.get('/trending/movie/day', {\n      params: {\n        page,\n      },\n    });\n    return data;\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const getMoviesByQuery = async (query, page = 1) => {\n  try {\n    const { data } = await axios.get('/search/movie', {\n      params: {\n        query,\n        page,\n      },\n    });\n    return data;\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const getMovieById = async movieId => {\n  try {\n    const { data } = await axios.get(`/movie/${movieId}`);\n    return data;\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const getMovieCredits = async movieId => {\n  try {\n    const { data } = await axios.get(`/movie/${movieId}/credits`);\n    return data;\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const getMovieReviews = async movieId => {\n  try {\n    const { data } = await axios.get(`/movie/${movieId}/reviews`);\n    return data;\n  } catch (error) {\n    throw error;\n  }\n};\n"],"names":["List","styled","Item","Text","movieId","useParams","useState","reviews","setReviews","useEffect","getMovieReviews","results","alert","message","length","map","author","content","id","axios","api_key","process","getPopularMovies","page","params","data","getMoviesByQuery","query","getMovieById","getMovieCredits"],"sourceRoot":""}